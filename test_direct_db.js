// –¢–µ—Å—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
const SUPABASE_URL = 'https://oaockmesooydvausfoca.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9hb2NrbWVzb295ZHZhdXNmb2NhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTEzNzI4NDEsImV4cCI6MjA2Njk0ODg0MX0.gwWS35APlyST7_IUvQvJtGO4QmGsvbE95lnQf0H1PUE';

async function testDirectDB() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π –¥–æ—Å—Ç—É–ø –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
  
  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Supabase –∫–ª–∏–µ–Ω—Ç
    const { createClient } = await import('https://esm.sh/@supabase/supabase-js@2');
    const supabase = createClient(SUPABASE_URL, SUPABASE_ANON_KEY);
    
    console.log('üìã –ü–æ–ª—É—á–∞–µ–º QR —Ç–æ–∫–µ–Ω—ã...');
    const { data: tokens, error: tokensError } = await supabase
      .from('user_qr_tokens')
      .select('token, user_id, created_at, is_active')
      .eq('is_active', true)
      .limit(5);
    
    if (tokensError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤:', tokensError);
      return;
    }
    
    console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤:', tokens.length);
    tokens.forEach((token, i) => {
      console.log(`${i + 1}. –¢–æ–∫–µ–Ω: ${token.token.substring(0, 8)}... (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: ${token.user_id})`);
    });
    
    if (tokens.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö QR —Ç–æ–∫–µ–Ω–æ–≤ –≤ –±–∞–∑–µ!');
      return;
    }
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º RPC —Ñ—É–Ω–∫—Ü–∏—é
    console.log('\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º RPC —Ñ—É–Ω–∫—Ü–∏—é...');
    const testToken = tokens[0].token;
    
    const { data: rpcResult, error: rpcError } = await supabase
      .rpc('get_qr_token_user', { token_param: testToken });
    
    if (rpcError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ RPC:', rpcError);
    } else {
      console.log('‚úÖ RPC —Ä–µ–∑—É–ª—å—Ç–∞—Ç:', rpcResult);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testDirectDB();




