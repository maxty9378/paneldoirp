// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç QR –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const SUPABASE_URL = 'https://oaockmesooydvausfoca.supabase.co';
const SUPABASE_ANON_KEY = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9hb2NrbWVzb295ZHZhdXNmb2NhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzY5NzQ4NzMsImV4cCI6MjA1MjU1MDg3M30.GhDbwgQ1cqFc4oUuPo-GaQpDY2zFACbLVniNY_OSCpTJKML3KR5D2hfWaquL2AOhG0BmCR1EYiW5d_Y4ZB2F2Q';

async function testQRAuth() {
  console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º QR –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é...');
  
  try {
    // 1. –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR —Ç–æ–∫–µ–Ω
    console.log('üìß –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR —Ç–æ–∫–µ–Ω –¥–ª—è doirp@sns.ru...');
    const generateResponse = await fetch(`${SUPABASE_URL}/functions/v1/generate-persistent-qr`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'apikey': SUPABASE_ANON_KEY,
        'Authorization': `Bearer ${SUPABASE_ANON_KEY}`,
      },
      body: JSON.stringify({ email: 'doirp@sns.ru' })
    });

    const generateData = await generateResponse.json();
    console.log('üìß Generate response:', generateData);

    if (!generateResponse.ok) {
      throw new Error(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${generateData.error}`);
    }

    const token = generateData.token;
    console.log('‚úÖ QR —Ç–æ–∫–µ–Ω —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω:', token.substring(0, 8) + '...');

    // 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ QR
    console.log('üîë –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é –ø–æ QR...');
    const authResponse = await fetch(`${SUPABASE_URL}/functions/v1/auth-by-qr-token`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
        'apikey': SUPABASE_ANON_KEY,
        'Authorization': `Bearer ${SUPABASE_ANON_KEY}`,
      },
      body: JSON.stringify({ token })
    });

    const authData = await authResponse.json();
    console.log('üîë Auth response:', authData);

    if (!authResponse.ok || !authData.success) {
      throw new Error(`–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${authData.error}`);
    }

    console.log('‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!');
    console.log('üîó Redirect URL:', authData.redirectUrl);
    console.log('üéØ –ù—É–∂–Ω–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏—è:', authData.needsActivation);

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testQRAuth();

