import React, { useState, useEffect } from 'react';
import { useAuth } from '../hooks/useAuth';
import { supabase } from '../lib/supabase';
import { Users, Mail, Phone, Briefcase, Building, MapPin, AlertCircle, RefreshCw, CheckCircle } from 'lucide-react';

interface User {
  id: string;
  email: string;
  full_name: string;
  sap_number: string;
  phone: string;
  role: string;
  subdivision: string;
  branch_subrole?: string;
  position: string;
  department: string;
  is_active: boolean;
  created_at: string;
  updated_at: string;
}

export function TestUsersView() {
  const { user: currentUser, userProfile } = useAuth();
  const [users, setUsers] = useState<User[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);
  const [lastFetch, setLastFetch] = useState<Date | null>(null);

  const fetchUsers = async () => {
    setLoading(true);
    setError(null);
    
    try {
      console.log('üîç –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', currentUser);
      console.log('üîç –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', userProfile?.role);
      
      const { data, error: fetchError } = await supabase
        .from('users')
        .select('*')
        .order('full_name', { ascending: true })
        .limit(50); // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º 50 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ –¥–ª—è —Ç–µ—Å—Ç–∞
      
      if (fetchError) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', fetchError);
        setError(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: ${fetchError.message}`);
        setUsers([]);
        return;
      }
      
      console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', data?.length || 0);
      console.log('üìä –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:', data);
      
      setUsers(data || []);
      setLastFetch(new Date());
    } catch (err) {
      console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞:', err);
      setError(`–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: ${err instanceof Error ? err.message : 'Unknown error'}`);
      setUsers([]);
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    fetchUsers();
  }, [currentUser]);

  const getRoleBadgeColor = (role: string) => {
    const colors: Record<string, string> = {
      administrator: 'bg-purple-100 text-purple-800',
      moderator: 'bg-blue-100 text-blue-800',
      expert: 'bg-indigo-100 text-indigo-800',
      trainer: 'bg-green-100 text-green-800',
      supervisor: 'bg-yellow-100 text-yellow-800',
      employee: 'bg-gray-100 text-gray-800',
    };
    return colors[role] || 'bg-gray-100 text-gray-800';
  };

  const getSubdivisionBadgeColor = (subdivision: string) => {
    if (subdivision === 'management_company') {
      return 'bg-emerald-100 text-emerald-800';
    }
    return 'bg-orange-100 text-orange-800';
  };

  return (
    <div className="p-6 max-w-7xl mx-auto">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
      <div className="mb-6">
        <div className="flex items-center justify-between mb-4">
          <div className="flex items-center space-x-3">
            <div className="w-12 h-12 bg-gradient-to-br from-[#06A478] to-[#4ade80] rounded-xl flex items-center justify-center shadow-lg">
              <Users className="h-6 w-6 text-white" />
            </div>
            <div>
              <h1 className="text-2xl font-bold text-gray-900">–¢–µ—Å—Ç–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</h1>
              <p className="text-sm text-gray-600">–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏–¥–∏–º–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö –ú–¢–° –≤ Supabase</p>
            </div>
          </div>
          
          <button
            onClick={fetchUsers}
            disabled={loading}
            className="flex items-center space-x-2 px-4 py-2 bg-[#06A478] text-white rounded-lg hover:bg-[#059669] transition-colors disabled:opacity-50 disabled:cursor-not-allowed shadow-sm"
          >
            <RefreshCw className={`h-4 w-4 ${loading ? 'animate-spin' : ''}`} />
            <span>–û–±–Ω–æ–≤–∏—Ç—å</span>
          </button>
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-4 mb-4">
          <div className="flex items-start">
            <div className="w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center mr-3 flex-shrink-0">
              <Users className="h-5 w-5 text-blue-600" />
            </div>
            <div className="flex-1">
              <h3 className="font-semibold text-blue-900 mb-1">–¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å</h3>
              <div className="text-sm text-blue-800 space-y-1">
                <div><strong>–ò–º—è:</strong> {currentUser?.full_name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                <div><strong>Email:</strong> {currentUser?.email || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</div>
                <div><strong>–†–æ–ª—å:</strong> <span className="px-2 py-0.5 rounded text-xs font-medium bg-blue-200 text-blue-900">{userProfile?.role || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span></div>
                <div><strong>–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ:</strong> <span className="px-2 py-0.5 rounded text-xs font-medium bg-blue-200 text-blue-900">{userProfile?.subdivision || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span></div>
              </div>
            </div>
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="grid grid-cols-1 md:grid-cols-4 gap-4 mb-6">
          <div className="bg-white rounded-lg border p-4 shadow-sm">
            <div className="text-2xl font-bold text-gray-900">{users.length}</div>
            <div className="text-sm text-gray-600">–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</div>
          </div>
          <div className="bg-white rounded-lg border p-4 shadow-sm">
            <div className="text-2xl font-bold text-green-600">
              {users.filter(u => u.is_active).length}
            </div>
            <div className="text-sm text-gray-600">–ê–∫—Ç–∏–≤–Ω—ã—Ö</div>
          </div>
          <div className="bg-white rounded-lg border p-4 shadow-sm">
            <div className="text-2xl font-bold text-blue-600">
              {users.filter(u => u.subdivision === 'management_company').length}
            </div>
            <div className="text-sm text-gray-600">–£–ø—Ä–∞–≤–ª—è—é—â–∞—è –∫–æ–º–ø–∞–Ω–∏—è</div>
          </div>
          <div className="bg-white rounded-lg border p-4 shadow-sm">
            <div className="text-2xl font-bold text-orange-600">
              {users.filter(u => u.subdivision === 'branches').length}
            </div>
            <div className="text-sm text-gray-600">–§–∏–ª–∏–∞–ª—ã</div>
          </div>
        </div>

        {/* –í—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
        {lastFetch && (
          <div className="flex items-center text-sm text-gray-500 mb-4">
            <CheckCircle className="h-4 w-4 mr-2 text-green-500" />
            –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: {lastFetch.toLocaleString('ru-RU')}
          </div>
        )}
      </div>

      {/* –û—à–∏–±–∫–∞ */}
      {error && (
        <div className="bg-red-50 border border-red-200 rounded-lg p-4 mb-6">
          <div className="flex items-start">
            <AlertCircle className="h-5 w-5 text-red-500 mr-3 flex-shrink-0 mt-0.5" />
            <div>
              <h3 className="font-semibold text-red-900 mb-1">–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö</h3>
              <p className="text-sm text-red-800">{error}</p>
              <p className="text-xs text-red-700 mt-2">
                –≠—Ç–æ –º–æ–∂–µ—Ç –æ–∑–Ω–∞—á–∞—Ç—å, —á—Ç–æ —É –≤–∞—à–µ–π —Ä–æ–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å RLS –ø–æ–ª–∏—Ç–∏–∫–∞–º–∏.
              </p>
            </div>
          </div>
        </div>
      )}

      {/* –ó–∞–≥—Ä—É–∑–∫–∞ */}
      {loading && (
        <div className="text-center py-12">
          <div className="inline-block animate-spin rounded-full h-12 w-12 border-4 border-[#06A478] border-t-transparent"></div>
          <p className="mt-4 text-gray-600">–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...</p>
        </div>
      )}

      {/* –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π */}
      {!loading && !error && users.length > 0 && (
        <div className="bg-white rounded-lg border shadow-sm overflow-hidden">
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gray-50 border-b">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –§–ò–û
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    Email
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    SAP
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –¢–µ–ª–µ—Ñ–æ–Ω
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –†–æ–ª—å
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –î–æ–ª–∂–Ω–æ—Å—Ç—å
                  </th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                    –°—Ç–∞—Ç—É—Å
                  </th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {users.map((user) => (
                  <tr key={user.id} className="hover:bg-gray-50 transition-colors">
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <div className="flex-shrink-0 h-10 w-10 rounded-full bg-gradient-to-br from-[#06A478] to-[#4ade80] flex items-center justify-center text-white font-semibold">
                          {user.full_name?.charAt(0)?.toUpperCase() || '?'}
                        </div>
                        <div className="ml-4">
                          <div className="text-sm font-medium text-gray-900">{user.full_name}</div>
                          <div className="text-xs text-gray-500">ID: {user.id.slice(0, 8)}...</div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center text-sm text-gray-900">
                        <Mail className="h-4 w-4 mr-2 text-gray-400" />
                        {user.email}
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-900">{user.sap_number || '-'}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center text-sm text-gray-900">
                        <Phone className="h-4 w-4 mr-2 text-gray-400" />
                        {user.phone || '-'}
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${getRoleBadgeColor(user.role)}`}>
                        {user.role}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <Building className="h-4 w-4 mr-2 text-gray-400" />
                        <span className={`px-2 py-1 text-xs font-medium rounded-full ${getSubdivisionBadgeColor(user.subdivision)}`}>
                          {user.subdivision === 'management_company' ? '–£–ö' : '–§–∏–ª–∏–∞–ª—ã'}
                        </span>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center text-sm text-gray-900">
                        <Briefcase className="h-4 w-4 mr-2 text-gray-400" />
                        {user.position || '-'}
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 py-1 text-xs font-medium rounded-full ${user.is_active ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>
                        {user.is_active ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}
                      </span>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      )}

      {/* –ü—É—Å—Ç–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ */}
      {!loading && !error && users.length === 0 && (
        <div className="text-center py-12 bg-white rounded-lg border">
          <Users className="h-12 w-12 text-gray-400 mx-auto mb-4" />
          <h3 className="text-lg font-medium text-gray-900 mb-2">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</h3>
          <p className="text-gray-600">
            –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –í–æ–∑–º–æ–∂–Ω–æ, —É –≤–∞—à–µ–π —Ä–æ–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º.
          </p>
        </div>
      )}

      {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
      <div className="mt-6 bg-yellow-50 border border-yellow-200 rounded-lg p-4">
        <h3 className="font-semibold text-yellow-900 mb-2">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—é</h3>
        <ul className="text-sm text-yellow-800 space-y-1 list-disc list-inside">
          <li>–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã <code className="bg-yellow-100 px-1 rounded">users</code> –≤ Supabase</li>
          <li>–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π ‚Äî –∑–Ω–∞—á–∏—Ç RLS –ø–æ–ª–∏—Ç–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –¥–ª—è –≤–∞—à–µ–π —Ä–æ–ª–∏</li>
          <li>–ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ –æ—à–∏–±–∫—É –∏–ª–∏ –ø—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ ‚Äî –∑–Ω–∞—á–∏—Ç —É –≤–∞—à–µ–π —Ä–æ–ª–∏ –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º</li>
          <li>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ–π—Ç–∏ –ø–æ–¥ —Ä–∞–∑–Ω—ã–º–∏ —Ä–æ–ª—è–º–∏ (–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä, —Ç—Ä–µ–Ω–µ—Ä, —ç–∫—Å–ø–µ—Ä—Ç –∏ —Ç.–¥.) –∏ –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤–∏–¥–Ω—ã</li>
          <li>–í—Å–µ –¥–∞–Ω–Ω—ã–µ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞ (F12) –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏</li>
        </ul>
      </div>
    </div>
  );
}
