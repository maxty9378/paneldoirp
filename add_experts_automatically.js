// –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤—Å–µ—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤ –±—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥
// –í—ã–ø–æ–ª–Ω–∏—Ç–µ —ç—Ç–æ—Ç –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

async function addAllExpertsToQuickLogin() {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤ –±—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥...');
    
    try {
        // 1. –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ —á–µ—Ä–µ–∑ Supabase
        const { createClient } = await import('https://esm.sh/@supabase/supabase-js@2');
        const supabaseUrl = 'https://oaockmesooydvausfoca.supabase.co';
        const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9hb2NrbWVzb295ZHZhdXNmb2NhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzY5NzQ4NzMsImV4cCI6MjA1MjU1MDg3M30.GhDbwgQ1cqFc4oUuPo-GaQpDY2zFACbLVniNY_OSCpTJKML3KR5D2hfWaquL2AOhG0BmCR1EYiW5d_Y4ZB2F2Q';
        
        const supabase = createClient(supabaseUrl, supabaseAnonKey);
        
        console.log('üì° –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤...');
        const { data: experts, error } = await supabase
            .from('users')
            .select('id, email, full_name, role, avatar_url, last_sign_in_at, created_at')
            .eq('role', 'expert')
            .eq('is_active', true)
            .eq('status', 'active')
            .not('email', 'is', null)
            .order('last_sign_in_at', { ascending: false, nullsFirst: false });
        
        if (error) {
            throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤: ${error.message}`);
        }
        
        console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤: ${experts.length}`);
        
        // 2. –§–æ—Ä–º–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∫—ç—à–∞
        const cachedUsers = experts.map(expert => ({
            id: expert.id,
            email: expert.email,
            full_name: expert.full_name,
            role: expert.role,
            last_sign_in_at: expert.last_sign_in_at || expert.created_at,
            avatar_url: expert.avatar_url
        }));
        
        // 3. –ü–æ–ª—É—á–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –∫—ç—à–∞
        const existingCached = localStorage.getItem('cached_users');
        let allUsers = existingCached ? JSON.parse(existingCached) : [];
        
        // 4. –î–æ–±–∞–≤–ª—è–µ–º —ç–∫—Å–ø–µ—Ä—Ç–æ–≤, –∏–∑–±–µ–≥–∞—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
        const existingIds = new Set(allUsers.map(user => user.id));
        const newExperts = cachedUsers.filter(expert => !existingIds.has(expert.id));
        
        if (newExperts.length > 0) {
            // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤ –Ω–∞—á–∞–ª–æ —Å–ø–∏—Å–∫–∞
            allUsers = [...newExperts, ...allUsers];
            
            // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–æ 10 –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
            if (allUsers.length > 10) {
                allUsers = allUsers.slice(0, 10);
            }
            
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ localStorage
            localStorage.setItem('cached_users', JSON.stringify(allUsers));
            
            console.log(`‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–æ–≤—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤: ${newExperts.length}`);
            console.log(`üìä –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫—ç—à–µ: ${allUsers.length}`);
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
            console.log('üë• –î–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ —ç–∫—Å–ø–µ—Ä—Ç—ã:');
            newExperts.forEach((expert, index) => {
                console.log(`${index + 1}. ${expert.full_name} (${expert.email})`);
            });
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫
            console.log('üìã –í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –±—ã—Å—Ç—Ä–æ–º –≤—Ö–æ–¥–µ:');
            allUsers.forEach((user, index) => {
                const isExpert = user.role === 'expert';
                console.log(`${index + 1}. ${user.full_name} (${user.email}) ${isExpert ? 'üë®‚Äçüíº' : 'üë§'}`);
            });
            
        } else {
            console.log('‚ÑπÔ∏è –í—Å–µ —ç–∫—Å–ø–µ—Ä—Ç—ã —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –±—ã—Å—Ç—Ä—ã–π –≤—Ö–æ–¥');
        }
        
        return {
            success: true,
            added: newExperts.length,
            total: allUsers.length,
            experts: newExperts
        };
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        return {
            success: false,
            error: error.message
        };
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –∫—ç—à–∞
function clearQuickLoginCache() {
    localStorage.removeItem('cached_users');
    console.log('üóëÔ∏è –ö—ç—à –±—ã—Å—Ç—Ä–æ–≥–æ –≤—Ö–æ–¥–∞ –æ—á–∏—â–µ–Ω');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ç–µ–∫—É—â–µ–≥–æ –∫—ç—à–∞
function viewQuickLoginCache() {
    const cached = localStorage.getItem('cached_users');
    if (cached) {
        const users = JSON.parse(cached);
        console.log(`üìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –∫—ç—à–µ (${users.length}):`);
        users.forEach((user, index) => {
            const isExpert = user.role === 'expert';
            console.log(`${index + 1}. ${user.full_name} (${user.email}) ${isExpert ? 'üë®‚Äçüíº' : 'üë§'}`);
        });
        return users;
    } else {
        console.log('‚ùå –ö—ç—à –ø—É—Å—Ç');
        return [];
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞ –ø–æ email
async function addExpertByEmail(email) {
    try {
        const { createClient } = await import('https://esm.sh/@supabase/supabase-js@2');
        const supabaseUrl = 'https://oaockmesooydvausfoca.supabase.co';
        const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im9hb2NrbWVzb295ZHZhdXNmb2NhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzY5NzQ4NzMsImV4cCI6MjA1MjU1MDg3M30.GhDbwgQ1cqFc4oUuPo-GaQpDY2zFACbLVniNY_OSCpTJKML3KR5D2hfWaquL2AOhG0BmCR1EYiW5d_Y4ZB2F2Q';
        
        const supabase = createClient(supabaseUrl, supabaseAnonKey);
        
        const { data: expert, error } = await supabase
            .from('users')
            .select('id, email, full_name, role, avatar_url, last_sign_in_at, created_at')
            .eq('email', email)
            .eq('role', 'expert')
            .eq('is_active', true)
            .single();
        
        if (error) {
            throw new Error(`–≠–∫—Å–ø–µ—Ä—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω: ${error.message}`);
        }
        
        const cachedUser = {
            id: expert.id,
            email: expert.email,
            full_name: expert.full_name,
            role: expert.role,
            last_sign_in_at: expert.last_sign_in_at || expert.created_at,
            avatar_url: expert.avatar_url
        };
        
        const existingCached = localStorage.getItem('cached_users');
        let allUsers = existingCached ? JSON.parse(existingCached) : [];
        
        // –£–¥–∞–ª—è–µ–º –µ—Å–ª–∏ —É–∂–µ –µ—Å—Ç—å
        allUsers = allUsers.filter(user => user.id !== expert.id);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –Ω–∞—á–∞–ª–æ
        allUsers.unshift(cachedUser);
        
        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
        if (allUsers.length > 10) {
            allUsers = allUsers.slice(0, 10);
        }
        
        localStorage.setItem('cached_users', JSON.stringify(allUsers));
        
        console.log(`‚úÖ –≠–∫—Å–ø–µ—Ä—Ç –¥–æ–±–∞–≤–ª–µ–Ω: ${expert.full_name} (${expert.email})`);
        return { success: true, expert: cachedUser };
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞:', error);
        return { success: false, error: error.message };
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
window.addAllExpertsToQuickLogin = addAllExpertsToQuickLogin;
window.clearQuickLoginCache = clearQuickLoginCache;
window.viewQuickLoginCache = viewQuickLoginCache;
window.addExpertByEmail = addExpertByEmail;

console.log('üîß –§—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã:');
console.log('- addAllExpertsToQuickLogin() - –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤');
console.log('- addExpertByEmail("email@example.com") - –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —ç–∫—Å–ø–µ—Ä—Ç–∞');
console.log('- viewQuickLoginCache() - –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ç–µ–∫—É—â–∏–π –∫—ç—à');
console.log('- clearQuickLoginCache() - –æ—á–∏—Å—Ç–∏—Ç—å –∫—ç—à');

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∑–∞–ø—É—Å–∫–∞–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤
console.log('üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —ç–∫—Å–ø–µ—Ä—Ç–æ–≤...');
addAllExpertsToQuickLogin();
